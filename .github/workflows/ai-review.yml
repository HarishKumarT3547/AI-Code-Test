name: Code Review

on:
  pull_request:
    branches: [main, master]

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint black bandit mypy

      - name: Run code analysis
        id: analysis
        run: |
          # Create analysis results directory
          mkdir -p analysis_results

          # Run pylint for Python code
          pylint src/ --output-format=json > analysis_results/pylint.json || true

          # Run black for code formatting
          black --check src/ > analysis_results/black.txt || true

          # Run bandit for security issues
          bandit -r src/ -f json -o analysis_results/bandit.json || true

          # Run mypy for type checking
          mypy src/ --json-report analysis_results/mypy || true

          # Create a summary file
          echo "# Code Analysis Summary" > analysis_results/summary.md
          echo "" >> analysis_results/summary.md

          # Add pylint results
          echo "## Pylint Analysis" >> analysis_results/summary.md
          echo "" >> analysis_results/summary.md
          if [ -s analysis_results/pylint.json ]; then
            jq -r '.[] | "### \(.path)\n\(.message) (Line \(.line))"' analysis_results/pylint.json >> analysis_results/summary.md
          else
            echo "No issues found" >> analysis_results/summary.md
          fi
          echo "" >> analysis_results/summary.md

          # Add black results
          echo "## Code Formatting" >> analysis_results/summary.md
          echo "" >> analysis_results/summary.md
          if [ -s analysis_results/black.txt ]; then
            cat analysis_results/black.txt >> analysis_results/summary.md
          else
            echo "No formatting issues found" >> analysis_results/summary.md
          fi
          echo "" >> analysis_results/summary.md

          # Add bandit results
          echo "## Security Analysis" >> analysis_results/summary.md
          echo "" >> analysis_results/summary.md
          if [ -s analysis_results/bandit.json ]; then
            jq -r '.results[] | "### \(.filename)\n\(.issue_text) (Line \(.line_number))"' analysis_results/bandit.json >> analysis_results/summary.md
          else
            echo "No security issues found" >> analysis_results/summary.md
          fi
          echo "" >> analysis_results/summary.md

          # Add mypy results
          echo "## Type Checking" >> analysis_results/summary.md
          echo "" >> analysis_results/summary.md
          if [ -s analysis_results/mypy/index.json ]; then
            jq -r '.files[] | "### \(.path)\n\(.messages[] | "\(.message) (Line \(.line))")"' analysis_results/mypy/index.json >> analysis_results/summary.md
          else
            echo "No type checking issues found" >> analysis_results/summary.md
          fi

      - name: Create review comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            try {
              const summary = fs.readFileSync('analysis_results/summary.md', 'utf8');
              
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                body: summary,
                event: 'COMMENT'
              });
            } catch (error) {
              console.error('Error creating review:', error);
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                body: 'Error processing code analysis results. Please check the workflow logs for details.',
                event: 'COMMENT'
              });
            }

      - name: Upload analysis results
        uses: actions/upload-artifact@v3
        with:
          name: analysis-results
          path: analysis_results/
          retention-days: 5
