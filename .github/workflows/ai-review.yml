name: Review Comment Generator

on:
  pull_request:
    branches: [main, master]

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint black

      - name: Run code analysis
        id: analysis
        run: |
          # Run pylint and capture output
          pylint_output=$(pylint src/ --output-format=json || true)

          # Run black in check mode
          black_output=$(black --check src/ || true)

          # Combine outputs into a single JSON
          echo "{\"pylint\": $pylint_output, \"black\": \"$black_output\"}" > analysis_results.json

          # Output the results
          cat analysis_results.json

      - name: Create review comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            try {
              const analysisResults = JSON.parse(fs.readFileSync('analysis_results.json', 'utf8'));
              
              let comment = '## Code Analysis Results\n\n';
              
              if (analysisResults.pylint && analysisResults.pylint.length > 0) {
                comment += '### Pylint Issues\n';
                analysisResults.pylint.forEach(issue => {
                  comment += `- ${issue.message} (${issue.path}:${issue.line})\n`;
                });
              }
              
              if (analysisResults.black) {
                comment += '\n### Black Formatting Issues\n';
                comment += analysisResults.black;
              }
              
              github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                body: comment,
                event: 'COMMENT'
              });
            } catch (error) {
              console.error('Error processing analysis results:', error);
              github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                body: 'Error processing code analysis results. Please check the workflow logs for details.',
                event: 'COMMENT'
              });
            }
